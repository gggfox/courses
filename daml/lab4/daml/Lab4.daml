module Lab4 where

import Daml.Script
import DA.List (head, tail)
import DA.Foldable (Foldable(minimum))
import DA.Math (sqrt)

getLetterGradeUsingIf: Decimal -> Text
getLetterGradeUsingIf number = 
  if number >= 90.0 then "A"
  else if number >= 80.0 then "B"
  else if number >= 70.0 then "C"
  else "F"

getScoreUsingCase: Text -> Text
getScoreUsingCase letter = case letter of 
  "A" -> "Score 90+"
  "B" -> "80 to 90"
  "C" -> "70 to 80"
  "F" -> "less than 70"
  _ -> "Invalid grade letter"

getLetterGradeUsingGuards: Decimal -> Text
getLetterGradeUsingGuards grade 
  | grade >= 90.0 = "A"
  | grade >= 80.0 = "B"
  | grade >= 70.0 = "C"
  | grade <= 70.0 = "F"
  | otherwise = "Invalid"

getAverageGradeLetter: Decimal -> Decimal -> Text
getAverageGradeLetter grade1 grade2 
  | avg >= 90.0 = "A"
  | avg >= 80.0 = "B"
  | avg >= 70.0 = "C"
  | avg <= 70.0 = "F"
  | otherwise = "Invalid"
    where avg = (grade1 + grade2)/2.0

triangleArea: [Decimal] -> Either Text Decimal
triangleArea list 
  | (length list) /= 3 = Left "Error: Triangle has 3 sides"
  | minimum list <= 0.0 = Left "Error: Side of a triangle cannot be 0.0"
  | a + b <= c || a + c <= b || b + c <= a = Left "Error: This can't be a triangle as sum of any two sides must be greater than the third"
  | otherwise = Right (sqrt (s * (s-a) * (s-b) * (s-c)))
  where 
    a = (head (list <> [0.0,0.0,0.0]))
    b = head (tail (list <> [0.0,0.0,0.0]))
    c = head (tail (tail (list <> [0.0,0.0,0.0])))
    s = (a + b + c)/2.0

test: Script ()
test = script do
  debug $ getLetterGradeUsingIf 90.0
  debug $ getLetterGradeUsingIf 85.0
  debug $ getLetterGradeUsingIf 75.0
  debug $ getLetterGradeUsingIf 65.00
  debug "----------"
  debug $ getScoreUsingCase "A"
  debug $ getScoreUsingCase "B"
  debug $ getScoreUsingCase "C"
  debug $ getScoreUsingCase "F"
  debug $ getScoreUsingCase "X"
  debug "----------"
  debug $ getLetterGradeUsingGuards 90.0
  debug $ getLetterGradeUsingGuards 80.0
  debug $ getLetterGradeUsingGuards 70.0
  debug $ getLetterGradeUsingGuards 60.0
  debug "----------"
  debug $ getAverageGradeLetter 75.0 83.0
  debug $ getAverageGradeLetter 95.0 83.0
  debug $ getAverageGradeLetter 98.0 83.0
  debug $ getAverageGradeLetter 60.0 70.0

triangle : Script ()
triangle = script do
  debug $ triangleArea [4.0, 2.0, 5.0]
  debug $ triangleArea [1.0, 2.0, 3.0]
  debug $ triangleArea [1.0, 2.0]
  debug $ triangleArea [1.0, 2.0, 0.0]

  return ()